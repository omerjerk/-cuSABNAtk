CMAKE_MINIMUM_REQUIRED(VERSION 3.1)

PROJECT(cusabnatk CXX)

SET(CMAKE_CXX_STANDARD 11)
SET(CMAKE_CXX_STANDARD_REQUIRED ON)
SET(CMAKE_CXX_EXTENSIONS OFF)

IF (NOT CMAKE_BUILD_TYPE)
  SET(CMAKE_BUILD_TYPE "Release")
ENDIF()

# standard set via -std to prapagate to nvcc
# we use C++11 to support some older SoC devices
SET(CMAKE_CXX_FLAGS_DEBUG "-std=c++14 ${CMAKE_CXX_FLAGS_DEBUG}")
SET(CMAKE_CXX_FLAGS_RELEASE "-std=c++14 -O3")

FIND_PACKAGE(OpenMP)
IF (OPENMP_FOUND OR OpenMP_FOUND)
  SET(CMAKE_CXX_FLAGS "${OpenMP_CXX_FLAGS} ${CMAKE_CXX_FLAGS}")
  SET(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${OpenMP_EXE_LINKER_FLAGS}")
ENDIF()

INCLUDE(CheckCXXCompilerFlag)

SET(CUDA_SEPARABLE_COMPILATION ON)
FIND_PACKAGE(CUDA 10.0 REQUIRED)


INCLUDE_DIRECTORIES(include/ .)

ADD_SUBDIRECTORY(src)
ADD_SUBDIRECTORY(examples)
